# freelanceTask5

# Битовые операции по заданиям на python
#
# до 2500 руб.
# Разработка на Python
#
# Описание
#
# программирование.
# Разработка с нуля.
# 1. С клавиатуры вводится 32-разрядное целое число a в двоичной системе счисления.
# А. Вывести k –ый бит числа a. Номер бита предварительно запросить у пользователя.
# Б. Установить/снять k –ый бит числа a.
# В. Поменять местами i –ый и j –ый биты в числе a. Числа i и j предварительно запросить у пользователя
# Г. Обнулить младшие m бит.
# 2. Дано 2^p разрядное целое число. «Поксорить» все биты этого числа друг с другом.
# 3. Написать методы циклического сдвига в 2^p разрядном целом числе на n бит влево и вправо.


# 1. С клавиатуры вводится 32-разрядное целое число a в двоичной системе счисления.
# **********************************************************************************************************************

string_number = str(input("Введите 32-разрядное число в двоичной системе счисления: "))


def str_to_int_to_bin_convertion(bin_number):
    # функция для перевода строки в 10-ричное число, а затем в 2-ичное
    bin_number = int(bin_number, 2)  # перевод строки в 10-ное число из 16 ричное
    bin_number = bin(bin_number)  # перевод 10-го числа в 2-ичное
    return bin_number


binary_number = str_to_int_to_bin_convertion(string_number)

# А. Вывести k –ый бит числа a. Номер бита предварительно запросить у пользователя.

# Маска из 32 нулей и единицы в заданном месте
k = int(input("Введите искомый номер бита: "))


def mask_create(bit, lenght):
    # Функция для создания маски заданной длины из нулей с единицей в заданном месте. Вывод - строка
    bit_mask_list = ['0'] * lenght  # используются символы ('0' и '1') вместо чисел, т.к "join()" не работает с числами
    bit_mask_list[-bit] = '1'
    bit_mask_string = ", ".join(bit_mask_list).replace(", ", "")
    return bit_mask_string


bit_mask_str = mask_create(k, 32)
print(bit_mask_str)
